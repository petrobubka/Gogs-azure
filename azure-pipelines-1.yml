# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0bab84c7-6c95-43dd-b23a-dda0d8a1bafc'
  imageRepository: 'gogsazure'
  containerRegistry: 'gogsregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'


  

stages:


- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool: vsphere
    steps:
    - task: Bash@3
      inputs:
        filePath: 'install-terraform.sh'
    - task: Bash@3
      inputs:
        filePath: 'install-azure-cli.sh'
    - task: Bash@3
      inputs:
        filePath: 'configure-named-profile.sh'
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)
    - task: Bash@3
      inputs:
        filePath: 'apply-terraform.sh'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'gogsregistry'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure for Students(1)(3a0e51bd-e967-4dd7-ab92-0092181878ee)'
        appType: 'webAppContainer'
        WebAppName: 'Gogs'
        DockerNamespace: 'gogsregistry.azurecr.io'
        DockerRepository: '$(imageRepository)'
        DockerImageTag: '$(tag)'

